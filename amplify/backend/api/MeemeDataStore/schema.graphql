type User @model @auth(rules: [{allow: owner}]) {
  id: ID!
  meemes: [Meeme] @hasMany(indexName: "byUser", fields: ["id"])
  albums: [Album] @hasMany(indexName: "byUser", fields: ["id"])
}
type Album @model @auth(rules: [{allow: owner}]) {
  id: ID!
  ownerId: ID! @index(name: "byUser")
  title: String!
  user: User! @belongsTo(fields: ["ownerId"])
  albumMeemes: [AlbumMeeme] @hasMany(indexName: "byAlbum", fields: ["id"])
}
type Meeme @model @auth(rules: [{allow: owner}]) {
  id: ID!
  ownerId: ID! @index(name: "byUser")
  user: User! @belongsTo(fields: ["ownerId"])
  timestamp: String!
  labels: [Label]!
  url: String!
  localUrl: String
  albumMeemes: [AlbumMeeme] @hasMany(indexName: "byMeeme", fields: ["id"])
}
type AlbumMeeme
  @model
  @auth(rules: [
    {allow: owner, operations: [create, read, update, delete], ownerField: "album.ownerId"},
    {allow: owner, operations: [create, read, update, delete], ownerField: "meeme.ownerId"}
  ]) {
  id: ID!
  albumId: ID! @index(name: "byAlbum")
  meemeId: ID! @index(name: "byMeeme")
  album: Album! @belongsTo(fields: ["albumId"])
  meeme: Meeme! @belongsTo(fields: ["meemeId"])
}
type Label {
  name: String!
  type: String!
  confidence: Float
}
